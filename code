#IMPORTING DATASET
from keras.datasets import mnist
data = mnist.load_data()
((x_train,y_train) , (x_test,y_test)) = data
print(type(data))
x_train.shape
x_test.shape
x_train = x_train.reshape((x_train.shape[0], 28*28)).astype('float32')
x_test = x_test.reshape((x_test.shape[0], 28*28)).astype('float32')
x_train = x_train / 255
x_test = x_test / 255
from keras.utils import np_utils

print(y_test.shape)

y_train = np_utils.to_categorical(y_train)
y_test = np_utils.to_categorical(y_test)
num_classes = y_test.shape[1]
print(y_test.shape)
from keras.models import Sequential
from keras.layers import Dense
model = Sequential()
model.add(Dense(32, input_dim = 28*28, activation='relu'))

model.add(Dense(64, activation='relu'))
model.add(Dense(10, activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.summary()
model.fit(x_train, y_train, epochs=10, batch_size=100)
scores = model.evaluate(x_test, y_test)
print(scores)
